.\" Manpage for _printf
.\" Contact Tolera Degefa or Gifti Lellisa to correct error or typos.
.TH man 1 "17 April 2022" "1.0" "_printf man page"
.SH NAME
_printf - format and print data
.SH SYNOPSIS
.B _printf   FORMAT [ARGUMENT]...
.br
.B _printf   OPTION
.br

.B #include "main.h"

.B int printf(const char *restrict format, ...);
.br
.SH DESCRIPTION
The function printf write output to stdout, the standard output stream.
.PP 
This function write the output under the control of a
format string that specifies how subsequent arguments (or
arguments accessed via the variable-length argument facilities of
stdarg(3)) are converted for output.
.br

.SH Format of the format string
.PP
The format string is a character string, beginning and ending in its initial shift state, if any. 
The format string is composed for zero or more directives: ordinary characters (different %) 
which are copied unchanged to the output stream; and conversion specifications, each of which 
results in fetching zero or more subsequent arguments.  Each conversion specification is 
introduced by the character %, and ends with a conversion specifier.

.br

.SH Conversion specifiers

The conversion specifiers are a character that specifies the type of conversion to be applied.
The conversion specifiers and their meanings are:

.SH c
The _int_ argument is converted in unsigned char and the resulting character is written.
.br
.SH s 
The const char * argument is expected to be a pointer to an array of character type
(pointer to a string).  Characters from the array are written up to (but not including) a terminating null byte
('\0'); if a precision is specified, no more than the number specified are written.  If a precision is given, no
null byte need be present; if the precision is not specified, or is greater than the size of the array, the
array must contain a terminating null byte.

.SH d, i
The int argument is converted to signed decimal notation.
.br
.SH %
A '%' is written.  No argument is converted.  The complete conversion specification is '%%'.

.SH Other descriptions

FORMAT controls the output as in C printf.  Interpreted sequences are:
    
    \\	    print a bacslash
    
    \\\'	   print simple quote
    
    \\\'"'	print doble quote
    
    \\b		backspace

    \\f		form feed

    \\v     vertical tab

    \\t     tab

    \\n     newline

.SH RETURN VALUE
.br
That function return the number of characters printed (excluding the null byte used to end output to strings).
If an output error is encountered, a negative value is returned.

.br 
.SH BUGS
No known bugs

.SH AUTHORS
.br
Written by Tolera Degefa,(toleradegefa2@gmail.com) and
Gifti Lellisa, (giftylelissa@gmail.com)
